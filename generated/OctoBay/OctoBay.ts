// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkCancelled extends ethereum.Event {
  get params(): ChainlinkCancelled__Params {
    return new ChainlinkCancelled__Params(this);
  }
}

export class ChainlinkCancelled__Params {
  _event: ChainlinkCancelled;

  constructor(event: ChainlinkCancelled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkFulfilled extends ethereum.Event {
  get params(): ChainlinkFulfilled__Params {
    return new ChainlinkFulfilled__Params(this);
  }
}

export class ChainlinkFulfilled__Params {
  _event: ChainlinkFulfilled;

  constructor(event: ChainlinkFulfilled) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ChainlinkRequested extends ethereum.Event {
  get params(): ChainlinkRequested__Params {
    return new ChainlinkRequested__Params(this);
  }
}

export class ChainlinkRequested__Params {
  _event: ChainlinkRequested;

  constructor(event: ChainlinkRequested) {
    this._event = event;
  }

  get id(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class IssueDepositEvent extends ethereum.Event {
  get params(): IssueDepositEvent__Params {
    return new IssueDepositEvent__Params(this);
  }
}

export class IssueDepositEvent__Params {
  _event: IssueDepositEvent;

  constructor(event: IssueDepositEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get issueId(): string {
    return this._event.parameters[2].value.toString();
  }

  get depositId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class OracleAdded extends ethereum.Event {
  get params(): OracleAdded__Params {
    return new OracleAdded__Params(this);
  }
}

export class OracleAdded__Params {
  _event: OracleAdded;

  constructor(event: OracleAdded) {
    this._event = event;
  }

  get _oracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OracleRemoved extends ethereum.Event {
  get params(): OracleRemoved__Params {
    return new OracleRemoved__Params(this);
  }
}

export class OracleRemoved__Params {
  _event: OracleRemoved;

  constructor(event: OracleRemoved) {
    this._event = event;
  }

  get _oracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReleaseIssueDepositsEvent extends ethereum.Event {
  get params(): ReleaseIssueDepositsEvent__Params {
    return new ReleaseIssueDepositsEvent__Params(this);
  }
}

export class ReleaseIssueDepositsEvent__Params {
  _event: ReleaseIssueDepositsEvent;

  constructor(event: ReleaseIssueDepositsEvent) {
    this._event = event;
  }

  get issueId(): string {
    return this._event.parameters[0].value.toString();
  }

  get githubUser(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class TwitterPost extends ethereum.Event {
  get params(): TwitterPost__Params {
    return new TwitterPost__Params(this);
  }
}

export class TwitterPost__Params {
  _event: TwitterPost;

  constructor(event: TwitterPost) {
    this._event = event;
  }

  get issueId(): string {
    return this._event.parameters[0].value.toString();
  }

  get tweetId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class UserDepositEvent extends ethereum.Event {
  get params(): UserDepositEvent__Params {
    return new UserDepositEvent__Params(this);
  }
}

export class UserDepositEvent__Params {
  _event: UserDepositEvent;

  constructor(event: UserDepositEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get githubUser(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UserSendEvent extends ethereum.Event {
  get params(): UserSendEvent__Params {
    return new UserSendEvent__Params(this);
  }
}

export class UserSendEvent__Params {
  _event: UserSendEvent;

  constructor(event: UserSendEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get githubUser(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class OctoBay__issueDepositsResult {
  value0: Address;
  value1: BigInt;
  value2: string;

  constructor(value0: Address, value1: BigInt, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }
}

export class OctoBay__pullRequestClaimsResult {
  value0: string;
  value1: string;
  value2: BigInt;

  constructor(value0: string, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class OctoBay__releasedIssuesResult {
  value0: string;
  value1: string;
  value2: BigInt;

  constructor(value0: string, value1: string, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class OctoBay__userDepositsResult {
  value0: Address;
  value1: BigInt;
  value2: string;

  constructor(value0: Address, value1: BigInt, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }
}

export class OctoBay__usersResult {
  value0: string;
  value1: Address;
  value2: i32;

  constructor(value0: string, value1: Address, value2: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    return map;
  }
}

export class OctoBay__getOracleJobResult {
  value0: Bytes;
  value1: BigInt;

  constructor(value0: Bytes, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class OctoBay extends ethereum.SmartContract {
  static bind(address: Address): OctoBay {
    return new OctoBay("OctoBay", address);
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  issueDepositIdsByIssueId(param0: string, param1: BigInt): BigInt {
    let result = super.call(
      "issueDepositIdsByIssueId",
      "issueDepositIdsByIssueId(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_issueDepositIdsByIssueId(
    param0: string,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "issueDepositIdsByIssueId",
      "issueDepositIdsByIssueId(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  issueDepositIdsBySender(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "issueDepositIdsBySender",
      "issueDepositIdsBySender(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_issueDepositIdsBySender(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "issueDepositIdsBySender",
      "issueDepositIdsBySender(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  issueDeposits(param0: BigInt): OctoBay__issueDepositsResult {
    let result = super.call(
      "issueDeposits",
      "issueDeposits(uint256):(address,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new OctoBay__issueDepositsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString()
    );
  }

  try_issueDeposits(
    param0: BigInt
  ): ethereum.CallResult<OctoBay__issueDepositsResult> {
    let result = super.tryCall(
      "issueDeposits",
      "issueDeposits(uint256):(address,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__issueDepositsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString()
      )
    );
  }

  issueDepositsAmountByIssueId(param0: string): BigInt {
    let result = super.call(
      "issueDepositsAmountByIssueId",
      "issueDepositsAmountByIssueId(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBigInt();
  }

  try_issueDepositsAmountByIssueId(
    param0: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "issueDepositsAmountByIssueId",
      "issueDepositsAmountByIssueId(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  issuePins(param0: string): BigInt {
    let result = super.call("issuePins", "issuePins(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);

    return result[0].toBigInt();
  }

  try_issuePins(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("issuePins", "issuePins(string):(uint256)", [
      ethereum.Value.fromString(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  issueReleaseIDsByIssueId(param0: string): Bytes {
    let result = super.call(
      "issueReleaseIDsByIssueId",
      "issueReleaseIDsByIssueId(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBytes();
  }

  try_issueReleaseIDsByIssueId(param0: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "issueReleaseIDsByIssueId",
      "issueReleaseIDsByIssueId(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  nextIssueDepositId(): BigInt {
    let result = super.call(
      "nextIssueDepositId",
      "nextIssueDepositId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_nextIssueDepositId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextIssueDepositId",
      "nextIssueDepositId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  octoPin(): Address {
    let result = super.call("octoPin", "octoPin():(address)", []);

    return result[0].toAddress();
  }

  try_octoPin(): ethereum.CallResult<Address> {
    let result = super.tryCall("octoPin", "octoPin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  oracles(param0: Address): string {
    let result = super.call("oracles", "oracles(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_oracles(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("oracles", "oracles(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingTwitterPostsIssueIds(param0: Bytes): string {
    let result = super.call(
      "pendingTwitterPostsIssueIds",
      "pendingTwitterPostsIssueIds(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toString();
  }

  try_pendingTwitterPostsIssueIds(param0: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall(
      "pendingTwitterPostsIssueIds",
      "pendingTwitterPostsIssueIds(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  pullRequestClaimIDsByPrId(param0: string): Bytes {
    let result = super.call(
      "pullRequestClaimIDsByPrId",
      "pullRequestClaimIDsByPrId(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBytes();
  }

  try_pullRequestClaimIDsByPrId(param0: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "pullRequestClaimIDsByPrId",
      "pullRequestClaimIDsByPrId(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  pullRequestClaims(param0: Bytes): OctoBay__pullRequestClaimsResult {
    let result = super.call(
      "pullRequestClaims",
      "pullRequestClaims(bytes32):(string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new OctoBay__pullRequestClaimsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt()
    );
  }

  try_pullRequestClaims(
    param0: Bytes
  ): ethereum.CallResult<OctoBay__pullRequestClaimsResult> {
    let result = super.tryCall(
      "pullRequestClaims",
      "pullRequestClaims(bytes32):(string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__pullRequestClaimsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt()
      )
    );
  }

  registeredOracles(param0: BigInt): Address {
    let result = super.call(
      "registeredOracles",
      "registeredOracles(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_registeredOracles(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "registeredOracles",
      "registeredOracles(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  releasedIssues(param0: Bytes): OctoBay__releasedIssuesResult {
    let result = super.call(
      "releasedIssues",
      "releasedIssues(bytes32):(string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return new OctoBay__releasedIssuesResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toBigInt()
    );
  }

  try_releasedIssues(
    param0: Bytes
  ): ethereum.CallResult<OctoBay__releasedIssuesResult> {
    let result = super.tryCall(
      "releasedIssues",
      "releasedIssues(bytes32):(string,string,uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__releasedIssuesResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toBigInt()
      )
    );
  }

  trustedForwarder(): Address {
    let result = super.call(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_trustedForwarder(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "trustedForwarder",
      "trustedForwarder():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  twitterAccountId(): string {
    let result = super.call(
      "twitterAccountId",
      "twitterAccountId():(string)",
      []
    );

    return result[0].toString();
  }

  try_twitterAccountId(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "twitterAccountId",
      "twitterAccountId():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  twitterFollowers(): BigInt {
    let result = super.call(
      "twitterFollowers",
      "twitterFollowers():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_twitterFollowers(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "twitterFollowers",
      "twitterFollowers():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userClaimAmountByGithbUser(param0: string): BigInt {
    let result = super.call(
      "userClaimAmountByGithbUser",
      "userClaimAmountByGithbUser(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBigInt();
  }

  try_userClaimAmountByGithbUser(param0: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userClaimAmountByGithbUser",
      "userClaimAmountByGithbUser(string):(uint256)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userDepositIdsByGithubUser(param0: string, param1: BigInt): BigInt {
    let result = super.call(
      "userDepositIdsByGithubUser",
      "userDepositIdsByGithubUser(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_userDepositIdsByGithubUser(
    param0: string,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userDepositIdsByGithubUser",
      "userDepositIdsByGithubUser(string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userDepositIdsBySender(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "userDepositIdsBySender",
      "userDepositIdsBySender(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_userDepositIdsBySender(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userDepositIdsBySender",
      "userDepositIdsBySender(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userDeposits(param0: BigInt): OctoBay__userDepositsResult {
    let result = super.call(
      "userDeposits",
      "userDeposits(uint256):(address,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new OctoBay__userDepositsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toString()
    );
  }

  try_userDeposits(
    param0: BigInt
  ): ethereum.CallResult<OctoBay__userDepositsResult> {
    let result = super.tryCall(
      "userDeposits",
      "userDeposits(uint256):(address,uint256,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__userDepositsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toString()
      )
    );
  }

  userIDsByAddress(param0: Address): Bytes {
    let result = super.call(
      "userIDsByAddress",
      "userIDsByAddress(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBytes();
  }

  try_userIDsByAddress(param0: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "userIDsByAddress",
      "userIDsByAddress(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  userIDsByGithubUser(param0: string): Bytes {
    let result = super.call(
      "userIDsByGithubUser",
      "userIDsByGithubUser(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBytes();
  }

  try_userIDsByGithubUser(param0: string): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "userIDsByGithubUser",
      "userIDsByGithubUser(string):(bytes32)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  users(param0: Bytes): OctoBay__usersResult {
    let result = super.call("users", "users(bytes32):(string,address,uint8)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return new OctoBay__usersResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toI32()
    );
  }

  try_users(param0: Bytes): ethereum.CallResult<OctoBay__usersResult> {
    let result = super.tryCall(
      "users",
      "users(bytes32):(string,address,uint8)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__usersResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toI32()
      )
    );
  }

  versionRecipient(): string {
    let result = super.call(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );

    return result[0].toString();
  }

  try_versionRecipient(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "versionRecipient",
      "versionRecipient():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOracleName(_oracle: Address): string {
    let result = super.call(
      "getOracleName",
      "getOracleName(address):(string)",
      [ethereum.Value.fromAddress(_oracle)]
    );

    return result[0].toString();
  }

  try_getOracleName(_oracle: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getOracleName",
      "getOracleName(address):(string)",
      [ethereum.Value.fromAddress(_oracle)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getOracleJob(_oracle: Address, _job: i32): OctoBay__getOracleJobResult {
    let result = super.call(
      "getOracleJob",
      "getOracleJob(address,uint8):(bytes32,uint256)",
      [
        ethereum.Value.fromAddress(_oracle),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_job))
      ]
    );

    return new OctoBay__getOracleJobResult(
      result[0].toBytes(),
      result[1].toBigInt()
    );
  }

  try_getOracleJob(
    _oracle: Address,
    _job: i32
  ): ethereum.CallResult<OctoBay__getOracleJobResult> {
    let result = super.tryCall(
      "getOracleJob",
      "getOracleJob(address,uint8):(bytes32,uint256)",
      [
        ethereum.Value.fromAddress(_oracle),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_job))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new OctoBay__getOracleJobResult(value[0].toBytes(), value[1].toBigInt())
    );
  }

  register(_oracle: Address, _githubUser: string): Bytes {
    let result = super.call("register", "register(address,string):(bytes32)", [
      ethereum.Value.fromAddress(_oracle),
      ethereum.Value.fromString(_githubUser)
    ]);

    return result[0].toBytes();
  }

  try_register(
    _oracle: Address,
    _githubUser: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "register",
      "register(address,string):(bytes32)",
      [
        ethereum.Value.fromAddress(_oracle),
        ethereum.Value.fromString(_githubUser)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  updateTwitterFollowersAndPost(_oracle: Address, _issueId: string): Bytes {
    let result = super.call(
      "updateTwitterFollowersAndPost",
      "updateTwitterFollowersAndPost(address,string):(bytes32)",
      [ethereum.Value.fromAddress(_oracle), ethereum.Value.fromString(_issueId)]
    );

    return result[0].toBytes();
  }

  try_updateTwitterFollowersAndPost(
    _oracle: Address,
    _issueId: string
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "updateTwitterFollowersAndPost",
      "updateTwitterFollowersAndPost(address,string):(bytes32)",
      [ethereum.Value.fromAddress(_oracle), ethereum.Value.fromString(_issueId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getUserDepositIdsForGithubUser(_githubUser: string): Array<BigInt> {
    let result = super.call(
      "getUserDepositIdsForGithubUser",
      "getUserDepositIdsForGithubUser(string):(uint256[])",
      [ethereum.Value.fromString(_githubUser)]
    );

    return result[0].toBigIntArray();
  }

  try_getUserDepositIdsForGithubUser(
    _githubUser: string
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserDepositIdsForGithubUser",
      "getUserDepositIdsForGithubUser(string):(uint256[])",
      [ethereum.Value.fromString(_githubUser)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getUserDepositIdsForSender(): Array<BigInt> {
    let result = super.call(
      "getUserDepositIdsForSender",
      "getUserDepositIdsForSender():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getUserDepositIdsForSender(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getUserDepositIdsForSender",
      "getUserDepositIdsForSender():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getIssueDepositIdsForIssueId(_depositId: string): Array<BigInt> {
    let result = super.call(
      "getIssueDepositIdsForIssueId",
      "getIssueDepositIdsForIssueId(string):(uint256[])",
      [ethereum.Value.fromString(_depositId)]
    );

    return result[0].toBigIntArray();
  }

  try_getIssueDepositIdsForIssueId(
    _depositId: string
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getIssueDepositIdsForIssueId",
      "getIssueDepositIdsForIssueId(string):(uint256[])",
      [ethereum.Value.fromString(_depositId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getIssueDepositIdsForSender(): Array<BigInt> {
    let result = super.call(
      "getIssueDepositIdsForSender",
      "getIssueDepositIdsForSender():(uint256[])",
      []
    );

    return result[0].toBigIntArray();
  }

  try_getIssueDepositIdsForSender(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getIssueDepositIdsForSender",
      "getIssueDepositIdsForSender():(uint256[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getUserClaimAmount(_githubUser: string): BigInt {
    let result = super.call(
      "getUserClaimAmount",
      "getUserClaimAmount(string):(uint256)",
      [ethereum.Value.fromString(_githubUser)]
    );

    return result[0].toBigInt();
  }

  try_getUserClaimAmount(_githubUser: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserClaimAmount",
      "getUserClaimAmount(string):(uint256)",
      [ethereum.Value.fromString(_githubUser)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOracles(): Array<Address> {
    let result = super.call("getOracles", "getOracles():(address[])", []);

    return result[0].toAddressArray();
  }

  try_getOracles(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getOracles", "getOracles():(address[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _link(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _uniswap(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _forwarder(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class SetOctoPinCall extends ethereum.Call {
  get inputs(): SetOctoPinCall__Inputs {
    return new SetOctoPinCall__Inputs(this);
  }

  get outputs(): SetOctoPinCall__Outputs {
    return new SetOctoPinCall__Outputs(this);
  }
}

export class SetOctoPinCall__Inputs {
  _call: SetOctoPinCall;

  constructor(call: SetOctoPinCall) {
    this._call = call;
  }

  get _octoPin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOctoPinCall__Outputs {
  _call: SetOctoPinCall;

  constructor(call: SetOctoPinCall) {
    this._call = call;
  }
}

export class SetPaymasterCall extends ethereum.Call {
  get inputs(): SetPaymasterCall__Inputs {
    return new SetPaymasterCall__Inputs(this);
  }

  get outputs(): SetPaymasterCall__Outputs {
    return new SetPaymasterCall__Outputs(this);
  }
}

export class SetPaymasterCall__Inputs {
  _call: SetPaymasterCall;

  constructor(call: SetPaymasterCall) {
    this._call = call;
  }

  get _octobayPaymaster(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPaymasterCall__Outputs {
  _call: SetPaymasterCall;

  constructor(call: SetPaymasterCall) {
    this._call = call;
  }
}

export class SetTwitterAccountIdCall extends ethereum.Call {
  get inputs(): SetTwitterAccountIdCall__Inputs {
    return new SetTwitterAccountIdCall__Inputs(this);
  }

  get outputs(): SetTwitterAccountIdCall__Outputs {
    return new SetTwitterAccountIdCall__Outputs(this);
  }
}

export class SetTwitterAccountIdCall__Inputs {
  _call: SetTwitterAccountIdCall;

  constructor(call: SetTwitterAccountIdCall) {
    this._call = call;
  }

  get _accountId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetTwitterAccountIdCall__Outputs {
  _call: SetTwitterAccountIdCall;

  constructor(call: SetTwitterAccountIdCall) {
    this._call = call;
  }
}

export class AddOracleCall extends ethereum.Call {
  get inputs(): AddOracleCall__Inputs {
    return new AddOracleCall__Inputs(this);
  }

  get outputs(): AddOracleCall__Outputs {
    return new AddOracleCall__Outputs(this);
  }
}

export class AddOracleCall__Inputs {
  _call: AddOracleCall;

  constructor(call: AddOracleCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _jobNames(): Array<i32> {
    return this._call.inputValues[2].value.toI32Array();
  }

  get _jobs(): Array<AddOracleCall_jobsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      AddOracleCall_jobsStruct
    >();
  }
}

export class AddOracleCall__Outputs {
  _call: AddOracleCall;

  constructor(call: AddOracleCall) {
    this._call = call;
  }
}

export class AddOracleCall_jobsStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get fee(): BigInt {
    return this[1].toBigInt();
  }
}

export class RemoveOracleCall extends ethereum.Call {
  get inputs(): RemoveOracleCall__Inputs {
    return new RemoveOracleCall__Inputs(this);
  }

  get outputs(): RemoveOracleCall__Outputs {
    return new RemoveOracleCall__Outputs(this);
  }
}

export class RemoveOracleCall__Inputs {
  _call: RemoveOracleCall;

  constructor(call: RemoveOracleCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveOracleCall__Outputs {
  _call: RemoveOracleCall;

  constructor(call: RemoveOracleCall) {
    this._call = call;
  }
}

export class ChangeOracleNameCall extends ethereum.Call {
  get inputs(): ChangeOracleNameCall__Inputs {
    return new ChangeOracleNameCall__Inputs(this);
  }

  get outputs(): ChangeOracleNameCall__Outputs {
    return new ChangeOracleNameCall__Outputs(this);
  }
}

export class ChangeOracleNameCall__Inputs {
  _call: ChangeOracleNameCall;

  constructor(call: ChangeOracleNameCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ChangeOracleNameCall__Outputs {
  _call: ChangeOracleNameCall;

  constructor(call: ChangeOracleNameCall) {
    this._call = call;
  }
}

export class AddOracleJobCall extends ethereum.Call {
  get inputs(): AddOracleJobCall__Inputs {
    return new AddOracleJobCall__Inputs(this);
  }

  get outputs(): AddOracleJobCall__Outputs {
    return new AddOracleJobCall__Outputs(this);
  }
}

export class AddOracleJobCall__Inputs {
  _call: AddOracleJobCall;

  constructor(call: AddOracleJobCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _jobName(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _job(): AddOracleJobCall_jobStruct {
    return this._call.inputValues[2].value.toTuple() as AddOracleJobCall_jobStruct;
  }
}

export class AddOracleJobCall__Outputs {
  _call: AddOracleJobCall;

  constructor(call: AddOracleJobCall) {
    this._call = call;
  }
}

export class AddOracleJobCall_jobStruct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get fee(): BigInt {
    return this[1].toBigInt();
  }
}

export class RemoveOracleJobCall extends ethereum.Call {
  get inputs(): RemoveOracleJobCall__Inputs {
    return new RemoveOracleJobCall__Inputs(this);
  }

  get outputs(): RemoveOracleJobCall__Outputs {
    return new RemoveOracleJobCall__Outputs(this);
  }
}

export class RemoveOracleJobCall__Inputs {
  _call: RemoveOracleJobCall;

  constructor(call: RemoveOracleJobCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _jobName(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RemoveOracleJobCall__Outputs {
  _call: RemoveOracleJobCall;

  constructor(call: RemoveOracleJobCall) {
    this._call = call;
  }
}

export class DeductGasFeeCall extends ethereum.Call {
  get inputs(): DeductGasFeeCall__Inputs {
    return new DeductGasFeeCall__Inputs(this);
  }

  get outputs(): DeductGasFeeCall__Outputs {
    return new DeductGasFeeCall__Outputs(this);
  }
}

export class DeductGasFeeCall__Inputs {
  _call: DeductGasFeeCall;

  constructor(call: DeductGasFeeCall) {
    this._call = call;
  }

  get _githubUser(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeductGasFeeCall__Outputs {
  _call: DeductGasFeeCall;

  constructor(call: DeductGasFeeCall) {
    this._call = call;
  }
}

export class RegisterCall extends ethereum.Call {
  get inputs(): RegisterCall__Inputs {
    return new RegisterCall__Inputs(this);
  }

  get outputs(): RegisterCall__Outputs {
    return new RegisterCall__Outputs(this);
  }
}

export class RegisterCall__Inputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _githubUser(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterCall__Outputs {
  _call: RegisterCall;

  constructor(call: RegisterCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ConfirmRegistrationCall extends ethereum.Call {
  get inputs(): ConfirmRegistrationCall__Inputs {
    return new ConfirmRegistrationCall__Inputs(this);
  }

  get outputs(): ConfirmRegistrationCall__Outputs {
    return new ConfirmRegistrationCall__Outputs(this);
  }
}

export class ConfirmRegistrationCall__Inputs {
  _call: ConfirmRegistrationCall;

  constructor(call: ConfirmRegistrationCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ConfirmRegistrationCall__Outputs {
  _call: ConfirmRegistrationCall;

  constructor(call: ConfirmRegistrationCall) {
    this._call = call;
  }
}

export class TwitterPostConfirmCall extends ethereum.Call {
  get inputs(): TwitterPostConfirmCall__Inputs {
    return new TwitterPostConfirmCall__Inputs(this);
  }

  get outputs(): TwitterPostConfirmCall__Outputs {
    return new TwitterPostConfirmCall__Outputs(this);
  }
}

export class TwitterPostConfirmCall__Inputs {
  _call: TwitterPostConfirmCall;

  constructor(call: TwitterPostConfirmCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _tweetId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class TwitterPostConfirmCall__Outputs {
  _call: TwitterPostConfirmCall;

  constructor(call: TwitterPostConfirmCall) {
    this._call = call;
  }
}

export class UpdateTwitterFollowersAndPostCall extends ethereum.Call {
  get inputs(): UpdateTwitterFollowersAndPostCall__Inputs {
    return new UpdateTwitterFollowersAndPostCall__Inputs(this);
  }

  get outputs(): UpdateTwitterFollowersAndPostCall__Outputs {
    return new UpdateTwitterFollowersAndPostCall__Outputs(this);
  }
}

export class UpdateTwitterFollowersAndPostCall__Inputs {
  _call: UpdateTwitterFollowersAndPostCall;

  constructor(call: UpdateTwitterFollowersAndPostCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _issueId(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateTwitterFollowersAndPostCall__Outputs {
  _call: UpdateTwitterFollowersAndPostCall;

  constructor(call: UpdateTwitterFollowersAndPostCall) {
    this._call = call;
  }

  get requestId(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UpdateTwitterFollowersConfirmCall extends ethereum.Call {
  get inputs(): UpdateTwitterFollowersConfirmCall__Inputs {
    return new UpdateTwitterFollowersConfirmCall__Inputs(this);
  }

  get outputs(): UpdateTwitterFollowersConfirmCall__Outputs {
    return new UpdateTwitterFollowersConfirmCall__Outputs(this);
  }
}

export class UpdateTwitterFollowersConfirmCall__Inputs {
  _call: UpdateTwitterFollowersConfirmCall;

  constructor(call: UpdateTwitterFollowersConfirmCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _followers(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateTwitterFollowersConfirmCall__Outputs {
  _call: UpdateTwitterFollowersConfirmCall;

  constructor(call: UpdateTwitterFollowersConfirmCall) {
    this._call = call;
  }
}

export class DepositEthForGithubUserCall extends ethereum.Call {
  get inputs(): DepositEthForGithubUserCall__Inputs {
    return new DepositEthForGithubUserCall__Inputs(this);
  }

  get outputs(): DepositEthForGithubUserCall__Outputs {
    return new DepositEthForGithubUserCall__Outputs(this);
  }
}

export class DepositEthForGithubUserCall__Inputs {
  _call: DepositEthForGithubUserCall;

  constructor(call: DepositEthForGithubUserCall) {
    this._call = call;
  }

  get _githubUser(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class DepositEthForGithubUserCall__Outputs {
  _call: DepositEthForGithubUserCall;

  constructor(call: DepositEthForGithubUserCall) {
    this._call = call;
  }
}

export class RefundUserDepositCall extends ethereum.Call {
  get inputs(): RefundUserDepositCall__Inputs {
    return new RefundUserDepositCall__Inputs(this);
  }

  get outputs(): RefundUserDepositCall__Outputs {
    return new RefundUserDepositCall__Outputs(this);
  }
}

export class RefundUserDepositCall__Inputs {
  _call: RefundUserDepositCall;

  constructor(call: RefundUserDepositCall) {
    this._call = call;
  }

  get _depositId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundUserDepositCall__Outputs {
  _call: RefundUserDepositCall;

  constructor(call: RefundUserDepositCall) {
    this._call = call;
  }
}

export class WithdrawUserDepositCall extends ethereum.Call {
  get inputs(): WithdrawUserDepositCall__Inputs {
    return new WithdrawUserDepositCall__Inputs(this);
  }

  get outputs(): WithdrawUserDepositCall__Outputs {
    return new WithdrawUserDepositCall__Outputs(this);
  }
}

export class WithdrawUserDepositCall__Inputs {
  _call: WithdrawUserDepositCall;

  constructor(call: WithdrawUserDepositCall) {
    this._call = call;
  }

  get _depositId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawUserDepositCall__Outputs {
  _call: WithdrawUserDepositCall;

  constructor(call: WithdrawUserDepositCall) {
    this._call = call;
  }
}

export class DepositEthForIssueCall extends ethereum.Call {
  get inputs(): DepositEthForIssueCall__Inputs {
    return new DepositEthForIssueCall__Inputs(this);
  }

  get outputs(): DepositEthForIssueCall__Outputs {
    return new DepositEthForIssueCall__Outputs(this);
  }
}

export class DepositEthForIssueCall__Inputs {
  _call: DepositEthForIssueCall;

  constructor(call: DepositEthForIssueCall) {
    this._call = call;
  }

  get _issueId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class DepositEthForIssueCall__Outputs {
  _call: DepositEthForIssueCall;

  constructor(call: DepositEthForIssueCall) {
    this._call = call;
  }
}

export class RefundIssueDepositCall extends ethereum.Call {
  get inputs(): RefundIssueDepositCall__Inputs {
    return new RefundIssueDepositCall__Inputs(this);
  }

  get outputs(): RefundIssueDepositCall__Outputs {
    return new RefundIssueDepositCall__Outputs(this);
  }
}

export class RefundIssueDepositCall__Inputs {
  _call: RefundIssueDepositCall;

  constructor(call: RefundIssueDepositCall) {
    this._call = call;
  }

  get _depositId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RefundIssueDepositCall__Outputs {
  _call: RefundIssueDepositCall;

  constructor(call: RefundIssueDepositCall) {
    this._call = call;
  }
}

export class ReleaseIssueDepositsCall extends ethereum.Call {
  get inputs(): ReleaseIssueDepositsCall__Inputs {
    return new ReleaseIssueDepositsCall__Inputs(this);
  }

  get outputs(): ReleaseIssueDepositsCall__Outputs {
    return new ReleaseIssueDepositsCall__Outputs(this);
  }
}

export class ReleaseIssueDepositsCall__Inputs {
  _call: ReleaseIssueDepositsCall;

  constructor(call: ReleaseIssueDepositsCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _issueId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _githubUser(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ReleaseIssueDepositsCall__Outputs {
  _call: ReleaseIssueDepositsCall;

  constructor(call: ReleaseIssueDepositsCall) {
    this._call = call;
  }
}

export class ConfirmReleaseIssueDepositsCall extends ethereum.Call {
  get inputs(): ConfirmReleaseIssueDepositsCall__Inputs {
    return new ConfirmReleaseIssueDepositsCall__Inputs(this);
  }

  get outputs(): ConfirmReleaseIssueDepositsCall__Outputs {
    return new ConfirmReleaseIssueDepositsCall__Outputs(this);
  }
}

export class ConfirmReleaseIssueDepositsCall__Inputs {
  _call: ConfirmReleaseIssueDepositsCall;

  constructor(call: ConfirmReleaseIssueDepositsCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ConfirmReleaseIssueDepositsCall__Outputs {
  _call: ConfirmReleaseIssueDepositsCall;

  constructor(call: ConfirmReleaseIssueDepositsCall) {
    this._call = call;
  }
}

export class ClaimReleasedIssueDepositsCall extends ethereum.Call {
  get inputs(): ClaimReleasedIssueDepositsCall__Inputs {
    return new ClaimReleasedIssueDepositsCall__Inputs(this);
  }

  get outputs(): ClaimReleasedIssueDepositsCall__Outputs {
    return new ClaimReleasedIssueDepositsCall__Outputs(this);
  }
}

export class ClaimReleasedIssueDepositsCall__Inputs {
  _call: ClaimReleasedIssueDepositsCall;

  constructor(call: ClaimReleasedIssueDepositsCall) {
    this._call = call;
  }

  get _issueId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ClaimReleasedIssueDepositsCall__Outputs {
  _call: ClaimReleasedIssueDepositsCall;

  constructor(call: ClaimReleasedIssueDepositsCall) {
    this._call = call;
  }
}

export class ClaimPullRequestCall extends ethereum.Call {
  get inputs(): ClaimPullRequestCall__Inputs {
    return new ClaimPullRequestCall__Inputs(this);
  }

  get outputs(): ClaimPullRequestCall__Outputs {
    return new ClaimPullRequestCall__Outputs(this);
  }
}

export class ClaimPullRequestCall__Inputs {
  _call: ClaimPullRequestCall;

  constructor(call: ClaimPullRequestCall) {
    this._call = call;
  }

  get _oracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _prId(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _githubUser(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ClaimPullRequestCall__Outputs {
  _call: ClaimPullRequestCall;

  constructor(call: ClaimPullRequestCall) {
    this._call = call;
  }
}

export class ConfirmPullRequestClaimCall extends ethereum.Call {
  get inputs(): ConfirmPullRequestClaimCall__Inputs {
    return new ConfirmPullRequestClaimCall__Inputs(this);
  }

  get outputs(): ConfirmPullRequestClaimCall__Outputs {
    return new ConfirmPullRequestClaimCall__Outputs(this);
  }
}

export class ConfirmPullRequestClaimCall__Inputs {
  _call: ConfirmPullRequestClaimCall;

  constructor(call: ConfirmPullRequestClaimCall) {
    this._call = call;
  }

  get _requestId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _score(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConfirmPullRequestClaimCall__Outputs {
  _call: ConfirmPullRequestClaimCall;

  constructor(call: ConfirmPullRequestClaimCall) {
    this._call = call;
  }
}
